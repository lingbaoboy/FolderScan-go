name: Build and Release GUI

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    name: Build Windows amd64
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
      - name: Install fyne
        run: go install fyne.io/tools/cmd/fyne@latest
      - name: Package with fyne
        run: |
          mkdir dist
          fyne package -os windows -release
          ls -l
          mv "FolderScan.exe" "dist/FolderScan-windows-amd64.exe"
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: FolderScan-windows-amd64
          path: dist/FolderScan-windows-amd64.exe

  build-macos:
    name: Build macOS arm64
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
      - name: Install fyne
        run: go install fyne.io/tools/cmd/fyne@latest
      - name: Package with fyne
        run: |
          mkdir -p dist
          fyne package -os darwin -release
          mv FolderScan.app dist/FolderScan-mac-arm64.app
      - name: Create DMG with Applications link
        run: |
          mkdir -p dmg-folder
          cp -R dist/FolderScan-mac-arm64.app dmg-folder/
          ln -s /Applications dmg-folder/Applications
          hdiutil create -volname "FolderScan" -srcfolder "dmg-folder" -ov -format UDZO "dist/FolderScan-mac-arm64.dmg"
      - uses: actions/upload-artifact@v4
        with:
          name: FolderScan-mac-arm64
          path: dist/FolderScan-mac-arm64.dmg

  release:
    name: Create Release
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
